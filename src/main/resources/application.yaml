spring:
  profiles:
    active: local
    
    
---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    hikari:
      jdbc-url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      username: sa
      password:
      driver-class-name: org.h2.Driver
      
      
---
spring:
  config:
    activate:
      on-profile: mysql
  datasource:
    hikari:
      jdbc-url: jdbc:mysql://localhost:3306/springbatch?useUnicode=true&characterEncoding=utf8
      username: root
      password: root
      driver-class-name: com.mysql.cj.jdbc.Driver
  batch:
    jdbc:
      initialize-schema: always # never일 때 db에 spring batch metadata 스키마가 없으면 에러 발생. 단, embedded의 경우 알아서 생성되어서 불필요
    job:
      names: ${job.name:NONE} # 이렇게 yaml 파일에 설정하면, --job.name= 를 통해 실행시킬 job을 선택 가능. 아니면 그냥 하드코딩도 가능
#      enabled: false
  jpa:
    hibernate:
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
